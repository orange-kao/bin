#!/usr/bin/env python3

import sys
import os
from argparse import ArgumentParser
from argparse import RawTextHelpFormatter
from lazylib.hashedcopyer import HashedCopyer

def main():
    parser = ArgumentParser(formatter_class=RawTextHelpFormatter, description="""
Copy files from source dir to dest dir(s).
The filename at dest_dir will be SHA512 of the file content.

Skip file copy if
    * File modification time is earlier than time_threshold
    * File already exist in ANY of the dest dir

It accept multiple dest dir.
It will be evaluated one-by-one, skipping any destination more than 95% full.
""")
    parser.add_argument("-e", "--epoch", type=float, action="store",
                        metavar="EPOCH",
                        help="Epoch threshold to avoid processing older files")
    parser.add_argument("--move-src-repo", action="store_true",
                        help="Move the file instead of copying. It will NOT verify the SHA512")
    parser.add_argument('src', type=str, nargs=1,
                        metavar="SRC",
                        help="Source directory")
    parser.add_argument('dest', type=str, nargs='+',
                        metavar="DEST",
                        help="Destination directory/directories")
    args_dict = vars(parser.parse_args())

    src_dir = args_dict["src"][0]
    threshold_ts = args_dict.get("epoch")
    dst_dir_list = args_dict["dest"]
    is_move = args_dict.get("move_src_repo")

    copyer = HashedCopyer(dst_dir_list)
    for root, dirs, files in os.walk(src_dir):
        for file_name in files:
            file_pathname = os.path.join(root, file_name)
            if threshold_ts is not None:
                if os.path.getmtime(file_pathname) < threshold_ts:
                    continue

            if is_move:
                copyer.move_src_repo(file_pathname)
                continue

            copyer.copy(file_pathname)

if __name__ == "__main__":
    main()

